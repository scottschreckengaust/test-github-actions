name: opensource
on:
  workflow_dispatch

jobs:
  scancode:
    runs-on: 'ubuntu-latest'
    name: 'ScanCode'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
        with:
          path: 'main'
      - name: 'Checkout ScanCode'
        uses: 'actions/checkout@v4'
        with:
          repository: 'nexB/scancode-toolkit'
          path: 'scancode-toolkit'
          ref: 'v32.2.1'
      - name: 'Setup Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: 'Build and ScanCode'
        run: |
          cd scancode-toolkit
          ./configure
          source venv/bin/activate
          echo ${{ github.workspace }}/main
          extractcode --verbose ${{ github.workspace }}/main
          scancode -clpeui -n `python -c 'import multiprocessing; print(multiprocessing.cpu_count())'` --verbose --json-pp ${{ github.workspace }}/report.json --csv ${{ github.workspace }}/report.csv ${{ github.workspace }}/main
          # ScanCode Workbench is recommended for reporting
          # https://github.com/nexB/scancode-workbench
          # Below is deprecated and reference fix for visualizing
          scancode --from-json ${{ github.workspace }}/report.json --html-app ${{ github.workspace }}/report.html
          sed -i -e "s|${{ github.workspace }}/report|./report|g" ${{ github.workspace }}/report.html
      - name: Store ScanCode Output
        uses: actions/upload-artifact@v4
        with:
          name: ScanCode Output
          path: |
            report.json
            report.csv
            report.html
            report_files/
          if-no-files-found: 'error'
  repolinter:
    runs-on: 'ubuntu-latest'
    name: 'repolinter'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      - name: 'Setup Python'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '20.x'
      - name: 'Run Repolinter'
        run: |
          npx repolinter > repolinter.txt || (echo "repolinter exit $?" && cat repolinter.txt && exit 1)
      - name: 'Store Repolinter Output'
        uses: actions/upload-artifact@v4
        if: ${{ always() }
        with:
          name: 'Repolinter Output'
          path: |
            repolinter.txt   
          if-no-files-found: 'error'
